task_analysis:
  name: "Task Analysis Base"
  description: "Analyzes Pokemon game tasks and creates execution plans"
  template: |
    Analyze this Pokemon game task and create a detailed execution plan:

    TASK: {task}

    Current Context:
    {context_summary}

    Memory Context:
    {memory_context}

    Please provide:
    1. **Current Game State Analysis**: What's visible on screen
    2. **Task Breakdown**: Break the task into specific steps
    3. **Execution Strategy**: How to accomplish each step
    4. **Navigation Requirements**: What menus/areas need to be accessed
    5. **Expected Challenges**: Potential obstacles or edge cases
    6. **Success Criteria**: How to know the task is complete

    Be specific and actionable in your response.
  variables: ["task", "context_summary", "memory_context"]
  version: "1.0"

stuck_recovery:
  name: "Simple Stuck Recovery"
  description: "Quick recovery when AI is stuck in movement loops"
  template: |
    STUCK RECOVERY MODE

    PROBLEM: You've been repeating the same action: {recent_actions}

    IMMEDIATE ACTION (Pick ONE):
    1. Try PERPENDICULAR direction:
       - If stuck going UP/DOWN → try LEFT or RIGHT
       - If stuck going LEFT/RIGHT → try UP or DOWN

    2. Try OPPOSITE direction:
       - If stuck going UP → try DOWN
       - If stuck going RIGHT → try LEFT

    3. Try INTERACTION:
       - Press A button (might be something to interact with)
       - Press B button (might need to exit a menu)

    CRITICAL RULES:
    - Never repeat the same failed action more than 2 times
    - Never use more than 2 buttons in one turn
    - Never keep trying the same direction when it's clearly blocked

    POKEMON GAME LOGIC:
    - If you can't move in a direction, that path is blocked
    - Try a different direction to continue exploring
    - Trainers will battle you automatically when you get close
    - Your goal is to explore the area systematically

    Current Goal: {task}

    CHOOSE ONE ALTERNATIVE DIRECTION AND TRY IT

    Use pokemon_controller with 1 button press only.
  variables: ["recent_actions", "task"]
  version: "2.0"

battle_analysis:
  name: "Pokemon Battle Menu Navigation Expert"
  description: "Detailed battle UI navigation with phase detection and menu systems"
  template: |
    POKEMON BATTLE NAVIGATION MODE
    
    You are in a Pokemon battle. Battles use MENU NAVIGATION, not movement.
    
    Current Task: {task}
    Recent Actions: {recent_actions}
    
    STEP 1 - IDENTIFY BATTLE PHASE:
    Look at the screen and determine which phase you're in:
    
    PHASE A - BATTLE INTRO/TEXT: 
    - See: Battle start text, "Wild Pokemon appeared", damage text, status messages
    - Action: Press A to advance text
    
    PHASE B - MAIN BATTLE MENU:
    - See: Four options in a menu - FIGHT, BAG, POKEMON, RUN
    - CRITICAL: Check which option has the triangle/cursor (active selection)
    - If BAG is selected: Press UP to move to FIGHT, then A
    - If FIGHT is selected: Press A to confirm
    - If other option selected: Use arrows to navigate to FIGHT, then A
    
    PHASE C - MOVE SELECTION SCREEN:
    - See: Four Pokemon moves displayed in a 2x2 grid
    - Example layout:
      [GROWL]        [THUNDERSHOCK]
      [TAIL WHIP]    [THUNDER WAVE]
    - Action: Navigate with arrow keys, then A to confirm
    
    PHASE D - BATTLE ANIMATION:
    - See: Pokemon attacking, damage numbers, HP bars changing
    - Action: Press A to continue after animation
    
    STEP 2 - CURRENT PHASE ANALYSIS:
    
    OBSERVE what you see RIGHT NOW:
    - Text messages or menu options?
    - Pokemon move names visible?
    - Animation playing?
    - What is highlighted/selected?
    
    STEP 3 - NAVIGATION ACTION:
    
    If PHASE A (text): Press ['a']
    If PHASE B (main menu): 
      - Check what's highlighted (triangle/cursor position)
      - If FIGHT highlighted: Press ['a']
      - If BAG highlighted: Press ['up', 'a'] (move up to FIGHT then select)
      - If POKEMON highlighted: Press ['up', 'up', 'a'] (move up twice to FIGHT)
      - If RUN highlighted: Press ['up', 'up', 'up', 'a'] (move up three times to FIGHT)
    If PHASE C (moves): Use 2x2 grid navigation:
      - Top-left move: ['a']
      - Top-right move: ['right', 'a'] 
      - Bottom-left move: ['down', 'a']
      - Bottom-right move: ['down', 'right', 'a']
    If PHASE D (animation): Press ['a'] to continue
    
    MOVE SELECTION STRATEGY:
    1. Identify move types and opponent Pokemon type
    2. Choose super effective moves (2x damage) if available
    3. Avoid not very effective moves (0.5x damage)
    4. Use strongest available move if no type advantage
    
    HEALTH MONITORING:
    - Your Pokemon HP low? Consider BAG (healing items) or POKEMON (switch)
    - Opponent Pokemon HP low? Use any damaging move to finish
    
    CRITICAL: 
    - Battles require MENU navigation, not directional movement
    - Pressing A repeatedly is normal in battles (advancing text/animations)
    - Focus on completing the battle phase-by-phase
    
    Use pokemon_controller with menu navigation buttons only.
  variables: ["task", "recent_actions"]
  version: "3.0"

pokemon_party_analysis:
  name: "Pokemon Party Analysis Base"
  description: "Analyzes Pokemon party status, levels, moves, and condition"
  template: |
    Analyze this Pokemon party screen and provide comprehensive information:

    Current Task Context: {task}

    Please examine the screen and provide detailed information about:

    1. **Pokemon Party Overview**:
       - How many Pokemon are in the party
       - Which Pokemon is currently selected/highlighted
       - Overall party health status

    2. **Individual Pokemon Details** (for each visible Pokemon):
       - Pokemon name and level
       - Current HP vs Maximum HP
       - Status conditions (poison, sleep, paralysis, etc.)
       - Type(s) if visible

    3. **Moves and PP Analysis** (if move details are visible):
       - List all moves for each Pokemon
       - PP remaining for each move
       - Move types and power if shown

    4. **Strategic Assessment**:
       - Which Pokemon are ready for battle
       - Which Pokemon need healing
       - Recommended actions based on current state

    5. **Navigation Context**:
       - What menu/screen are we currently viewing
       - How to access more detailed information if needed

    Format your response with clear sections and be specific about numbers and details.
  variables: ["task", "recent_actions"]
  version: "2.0"

exploration_strategy:
  name: "Pokemon Area Exploration Strategy"  
  description: "Systematic exploration of Pokemon game areas to find all trainers and paths"
  template: |
    POKEMON EXPLORATION STRATEGY

    CORE POKEMON RULES:
    - Trainers battle you AUTOMATICALLY when they see you (line of sight)  
    - Your goal: Explore every part of this area systematically
    - Wild Pokemon will also encounter you automatically in tall grass
    - Navigation: Move through area to discover all content

    Current Task: {task}
    Recent Actions: {recent_actions}

    OBSERVATION PHASE:
    - What type of area are you in: Route, Forest, Cave, City, Building?
    - Where is your character currently positioned?
    - What paths/directions are available from here?
    - Are there any trainers visible on screen?
    - Any unexplored paths or areas visible?

    EXPLORATION STRATEGY:
    - PRIMARY GOAL: Visit every walkable tile in this area
    - Trainer Battles: Will happen automatically when you get close enough
    - Wild Pokemon: Will appear in grass areas automatically
    - Area Completion: When you've explored all possible paths
    - Next Step: Pick an unexplored direction and move there

    IMMEDIATE MOVEMENT (1-2 buttons max):
    - Choose ONE unexplored direction: up, down, left, or right
    - If all nearby areas explored, backtrack and try different branch
    - If you see a trainer, move toward them (battle will start automatically)
    - If path blocked, try alternative route
    - NEVER spam same direction repeatedly

    DEPTH-FIRST EXPLORATION RULES:
    1. Pick a direction and follow it until you can't go further
    2. When blocked, backtrack and try the next available path
    3. Trainers will battle you automatically - don't try to initiate
    4. Area complete when no more unexplored paths remain
    5. Then find exit to next area or return to previous area

    Use pokemon_controller with 1 directional button.
  variables: ["task", "recent_actions"]
  version: "3.0"

inventory_analysis:
  name: "Inventory and Items Analysis Base"
  description: "Analyzes Pokemon inventory, items, and bag contents"
  template: |
    Analyze this Pokemon inventory/bag screen:

    Task Context: {task}

    Please examine and report on:

    1. **Bag Organization**:
       - Which bag section is currently selected
       - Available bag categories (Items, Poke Balls, Key Items, etc.)
       - Navigation state within the inventory

    2. **Item Inventory**:
       - List all visible items with quantities
       - Item categories and organization
       - Special or rare items present

    3. **Item Functionality**:
       - Healing items and their effects
       - Battle items (X Attack, X Defense, etc.)
       - Utility items (Repel, Escape Rope, etc.)
       - Key items and their purposes

    4. **Quantity Analysis**:
       - Items that are running low
       - Items that are well-stocked
       - Missing essential items

    5. **Strategic Assessment**:
       - Preparedness for upcoming challenges
       - Items that should be purchased
       - Items that can be used immediately
       - Inventory management recommendations

    6. **Usage Context**:
       - Items relevant to current task
       - Items that could solve immediate problems
       - Items that should be saved for later

    Be thorough in listing items and their quantities.
  variables: ["task", "recent_actions"]
  version: "2.0"

