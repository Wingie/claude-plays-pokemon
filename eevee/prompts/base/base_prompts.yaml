task_analysis:
  name: "Task Analysis Base"
  description: "Analyzes Pokemon game tasks and creates execution plans"
  template: |
    Analyze this Pokemon game task and create a detailed execution plan:

    TASK: {task}

    Current Context:
    {context_summary}

    Memory Context:
    {memory_context}

    Please provide:
    1. **Current Game State Analysis**: What's visible on screen
    2. **Task Breakdown**: Break the task into specific steps
    3. **Execution Strategy**: How to accomplish each step
    4. **Navigation Requirements**: What menus/areas need to be accessed
    5. **Expected Challenges**: Potential obstacles or edge cases
    6. **Success Criteria**: How to know the task is complete

    Be specific and actionable in your response.
  variables: ["task", "context_summary", "memory_context"]
  version: "1.0"

stuck_navigation:
  name: "Stuck Navigation Recovery"
  description: "Handles navigation when AI is stuck in loops or making no progress"
  template: |
    üö® **NAVIGATION ISSUE DETECTED** üö®
    
    **PROBLEM**: {stuck_problem}
    
    **RECENT ACTIONS**: {recent_actions}
    
    **ANALYSIS REQUIRED**:
    üéØ **OBSERVE**: What barriers or obstacles are preventing movement?
    üîç **DOOR CHECK**: Are there any **dark rectangular areas** in walls (doors/entrances)?
    üß† **DIAGNOSE**: Why are the recent actions not working?
    üí° **ALTERNATIVE STRATEGY**: Should you move toward a visible door instead?
    
    **RECOVERY STRATEGIES TO CONSIDER**:
    1. **TRANSITION ROOM ALERT**: You're stuck in UP/DOWN loop between inside/outside!
       - **INSIDE BUILDING**: Look for TWO exits - top carpet AND bottom carpet
       - **TOP CARPET (UP)** = Forward to next area (Viridian Forest)  
       - **BOTTOM CARPET (DOWN)** = Back to previous area (Viridian City)
       - **GOAL**: If going to Viridian Forest, find and walk to TOP carpet, then press UP
    2. **BUILDING NAVIGATION**: When inside, don't just press DOWN at first carpet you see
       - **Look around**: Move LEFT/RIGHT to find the correct exit carpet
       - **Two exits rule**: Most transition buildings have north AND south exits
    3. **LOCATION CONTEXT**: Where do you want to go? 
       - **Viridian Forest** = Find TOP/NORTH carpet inside building
       - **Viridian City** = Use BOTTOM/SOUTH carpet inside building
    
    **CRITICAL RULES**:
    - **NEVER repeat the same button that just failed multiple times**
    - **Maximum 1-2 button presses (never more than 3)**
    - **Try the OPPOSITE or PERPENDICULAR direction first**
    - **If at area boundary, try A button for interaction**
    
    **Current Context**: {task}
    **Goal**: {goal}
    
    Use the pokemon_controller tool with alternative button sequence.
  variables: ["stuck_problem", "recent_actions", "task", "goal"]
  version: "1.0"

battle_analysis:
  name: "Pokemon Battle Expert Analysis"
  description: "Advanced battle analysis with type effectiveness and move selection"
  template: |
    ‚öîÔ∏è **POKEMON BATTLE EXPERT MODE** ‚öîÔ∏è
    
    **BATTLE CONTEXT**: {task}
    
    **BATTLE ANALYSIS PROTOCOL**:
    
    üéØ **OBSERVATION PHASE**:
    - What Pokemon am I using? What are its visible moves?
    - What opponent Pokemon am I facing?
    - What are the current HP levels for both Pokemon?
    - Are we in the battle menu or move selection screen?
    
    üß† **STRATEGIC ANALYSIS PHASE**:
    - What types are both Pokemon? (Use the Battle Playbook knowledge)
    - Which of my moves are super effective? (2x damage)
    - Which moves are neutral? (1x damage)  
    - Which moves are not very effective? (0.5x damage)
    - Any moves that have no effect? (0x damage)
    
    ‚ö° **ACTION SELECTION PHASE**:
    - If in battle menu: Press A to select "FIGHT"
    - If in move selection: Use type effectiveness to choose best move
    - Navigate to optimal move using directional buttons + A
    
    **MOVE SELECTION PRIORITY**:
    1. Super effective moves (2x damage) - HIGHEST PRIORITY
    2. Strong neutral moves (1x damage) - SECOND PRIORITY  
    3. Weak but effective moves (0.5x damage) - THIRD PRIORITY
    4. Status moves (no damage) - ONLY if no damage moves available
    
    **BUTTON SEQUENCE RULES**:
    - Battle menu visible? ‚Üí ["a"] to select FIGHT
    - Want first move? ‚Üí ["a"] 
    - Want second move? ‚Üí ["down", "a"]
    - Want third move (if 2x2 grid)? ‚Üí ["right", "a"]  
    - Want fourth move (if 2x2 grid)? ‚Üí ["down", "right", "a"]
    
    **CRITICAL**: Never spam A button. Always identify the best move first, then navigate to it.
    
    Use pokemon_controller tool with calculated button sequence.
  variables: ["task"]
  version: "1.0"

pokemon_party_analysis:
  name: "Pokemon Party Analysis Base"
  description: "Analyzes Pokemon party status, levels, moves, and condition"
  template: |
    Analyze this Pokemon party screen and provide comprehensive information:

    Current Task Context: {task}

    Please examine the screen and provide detailed information about:

    1. **Pokemon Party Overview**:
       - How many Pokemon are in the party
       - Which Pokemon is currently selected/highlighted
       - Overall party health status

    2. **Individual Pokemon Details** (for each visible Pokemon):
       - Pokemon name and level
       - Current HP vs Maximum HP
       - Status conditions (poison, sleep, paralysis, etc.)
       - Type(s) if visible

    3. **Moves and PP Analysis** (if move details are visible):
       - List all moves for each Pokemon
       - PP remaining for each move
       - Move types and power if shown

    4. **Strategic Assessment**:
       - Which Pokemon are ready for battle
       - Which Pokemon need healing
       - Recommended actions based on current state

    5. **Navigation Context**:
       - What menu/screen are we currently viewing
       - How to access more detailed information if needed

    Format your response with clear sections and be specific about numbers and details.
  variables: ["task", "recent_actions"]
  version: "2.0"

location_analysis:
  name: "Location Analysis - Step by Step Navigation"
  description: "Analyzes current location with focus on immediate next movement"
  template: |
    Analyze this Pokemon location and decide the IMMEDIATE next movement:

    Task Context: {task}
    Recent Actions: {recent_actions}

    **CRITICAL INSTRUCTIONS**:
    - Take ONE step at a time (1-2 buttons maximum)
    - Observe immediate surroundings only
    - Don't plan long movement sequences
    - React to what you see RIGHT NOW

    **IMMEDIATE LOCATION ANALYSIS**:

    üéØ **OBSERVATION** (What do you see RIGHT NOW?):
    - Where is your character positioned?
    - What's directly around you (trees, paths, buildings, NPCs)?
    - **DOOR/ENTRANCE CHECK**: Are there any **dark rectangular areas** in walls? (These are doors!)
    - **CARPET/MAT CHECK**: Any **carpet patterns** on the ground? (Building entrances/exits)
    - **TRANSITION CHECK**: Different **floor textures** or **color changes**? (Area boundaries)
    - Are there any obstacles blocking immediate movement?
    - Is there a battle happening or menu open?

    üß† **ANALYSIS** (What's the immediate next step?):
    - Based on your goal: {task}
    - **IF YOU SEE A DOOR/ENTRANCE**: Move toward it first, then press UP to enter
    - **IF ON CARPET/MAT INSIDE**: Press DOWN to exit building
    - What direction makes sense for ONE step?
    - Are you stuck or repeating the same action?
    - Do you need to move toward a visible entrance?

    ‚ö° **IMMEDIATE MOVEMENT** (1 direction only):
    - Choose ONE direction: up, down, left, or right
    - OR press A to interact with something nearby
    - OR press B to back out of a menu
    - NEVER move multiple steps in one decision

    **MOVEMENT GUIDELINES**:
    - **PRIORITY 1**: If you see a door (dark rectangle in wall), move toward it
    - **PRIORITY 2**: Once at door, press UP to enter (or DOWN to exit if inside)
    - If you see a path, follow it one step at a time
    - If blocked by obstacle, try a different direction
    - If in a menu, press A or B as appropriate
    - If you've been going the same direction multiple times, LOOK FOR DOORS instead

    Use pokemon_controller with just 1 button press.
  variables: ["task", "recent_actions"]
  version: "2.0"

inventory_analysis:
  name: "Inventory and Items Analysis Base"
  description: "Analyzes Pokemon inventory, items, and bag contents"
  template: |
    Analyze this Pokemon inventory/bag screen:

    Task Context: {task}

    Please examine and report on:

    1. **Bag Organization**:
       - Which bag section is currently selected
       - Available bag categories (Items, Poke Balls, Key Items, etc.)
       - Navigation state within the inventory

    2. **Item Inventory**:
       - List all visible items with quantities
       - Item categories and organization
       - Special or rare items present

    3. **Item Functionality**:
       - Healing items and their effects
       - Battle items (X Attack, X Defense, etc.)
       - Utility items (Repel, Escape Rope, etc.)
       - Key items and their purposes

    4. **Quantity Analysis**:
       - Items that are running low
       - Items that are well-stocked
       - Missing essential items

    5. **Strategic Assessment**:
       - Preparedness for upcoming challenges
       - Items that should be purchased
       - Items that can be used immediately
       - Inventory management recommendations

    6. **Usage Context**:
       - Items relevant to current task
       - Items that could solve immediate problems
       - Items that should be saved for later

    Be thorough in listing items and their quantities.
  variables: ["task", "recent_actions"]
  version: "2.0"

battle_analysis:
  name: "Battle Situation Analysis - Step by Step"
  description: "Analyzes Pokemon battles with focus on immediate next action"
  template: |
    Analyze this Pokemon battle and decide the IMMEDIATE next action:

    Task Context: {task}
    Recent Actions: {recent_actions}

    **CRITICAL INSTRUCTIONS**:
    - Focus ONLY on the immediate next step
    - Maximum 1-2 button presses (never more than 3)
    - Observe what's on screen RIGHT NOW
    - Don't plan multiple moves ahead

    **IMMEDIATE BATTLE ANALYSIS**:

    üéØ **OBSERVATION** (What do you see RIGHT NOW?):
    - What menu or battle screen is currently displayed?
    - What are the exact options visible?
    - What is your Pokemon's current state?
    - What is the opponent's current state?

    üß† **ANALYSIS** (What should happen next?):
    - What is the immediate problem to solve?
    - What menu navigation is needed right now?
    - Is this a move selection, battle menu, or other screen?

    ‚ö° **IMMEDIATE ACTION** (1-2 buttons only):
    - If battle menu visible: Press A to select FIGHT
    - If move selection visible: Use direction + A for specific move
    - If text scrolling: Press A to continue
    - NEVER plan more than 2 buttons at once

    **MOVE SELECTION GUIDE**:
    - First move (top-left): Just press A
    - Second move (below first): Press DOWN then A  
    - Third move (top-right): Press RIGHT then A
    - Fourth move (bottom-right): Press DOWN, RIGHT, then A

    Use pokemon_controller with 1-2 buttons maximum.
  variables: ["task", "recent_actions"]
  version: "2.0"